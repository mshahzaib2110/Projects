#include <linux/kernel.h>
#include <linux/init.h>
#include <linux/module.h>
#include <linux/kdev_t.h>
#include <linux/fs.h>
#include <linux/cdev.h>
#include <linux/device.h>
#include<linux/slab.h>        
#include<linux/uaccess.h>              
#include <linux/kthread.h>            
#include <linux/sched.h>              
#include <linux/delay.h>
 

static DEFINE_RWLOCK(etx_rwlock);
 
 
unsigned long globalvar = 0;
 
int thread_function1(void *pv);
int thread_function2(void *pv);


//thread function 1 write

int thread_function1(void *pv)
{
    while(!kthread_should_stop()) {  
        write_lock(&etx_rwlock); //write locked
        globalvar++;
  pr_info("In Thread Function1 while write is locked: Globalvar is: %lu\n", globalvar);
        write_unlock(&etx_rwlock);
        msleep(1000);
    }
    return 0;
}


// thread function 2 - read
int thread_function2(void *pv)
{
    while(!kthread_should_stop()) {
        read_lock(&etx_rwlock); //read locked
        pr_info("In Thread Function2 while read locked: Globalvar is: %lu\n", globalvar);
        read_unlock(&etx_rwlock);
        msleep(1000);
    }
    return 0;
}

asmlinkage long sys_final(void)
{
   
        thread1 = kthread_run(thread_function1,NULL,"Thread1");
        if(thread1) {
            pr_err("Kthread1 Created Successfully...\n");
        } else {
            pr_err("Cannot create kthread1\n");
             
        }
 
         /* Creating Thread 2 */
        thread2 = kthread_run(thread_function2,NULL,"Thread2");
        if(thread2) {
            pr_err("Kthread2 Created Successfully...\n");
        } else {
            pr_err("Cannot create kthread2\n");
             
        }
 
        return 0;
 
}
